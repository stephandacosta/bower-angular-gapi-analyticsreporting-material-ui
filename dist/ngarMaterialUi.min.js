"use strict";var ngarUI=angular.module("angularGapiAnalyticsreportingUI",[]);ngarUI.run(function(){}),angular.module("angularGapiAnalyticsreportingUI").controller("DateSelectorCtrl",["$scope","ngarReportService",function(a,b){a.dateStart=b.params.dateStart,a.dateEnd=b.params.dateEnd,a.$watch("dateStart",function(a){b.params.dateStart=a}),a.$watch("dateEnd",function(a){b.params.dateEnd=a}),a.openEndDate=function(){a.endDateIsOpen=!0},a.closeEndDate=function(){a.endDateIsOpen=!1}}]).directive("ngarDateSelector",function(){return{restrict:"E",scope:{type:"@"},controller:"DateSelectorCtrl",template:'<div layout="row" layout-padding>\n  <div layout="column">\n    <label class="md-subhead">Start Date </label>\n    <md-datepicker ng-model="dateStart" ng-change="openEndDate()" md-hide-icons="triangle" md-open-on-focus ng-required></md-datepicker>\n  </div>\n  <div layout="column">\n    <label class="md-subhead">End Date</label>\n    <md-datepicker ng-model="dateEnd" md-hide-icons="triangle" md-is-open="endDateIsOpen"  md-open-on-focus ng-required></md-datepicker>\n  </div>\n</div>\n'}}),angular.module("angularGapiAnalyticsreportingUI").factory("ngarFilter",function(){var a=function(a,b){return function(c){return _.includes(_.lowerCase(c[b]),_.lowerCase(a))}};return{createFilter:a}}).controller("MeasurementSelectorCtrl",["$scope","ngarFilter","ngarManagementService","ngarReportService",function(a,b,c,d){var e={DIMENSION:"dimensions",METRIC:"metrics",SEGMENT:"segments"};a.selectedMeasurements=d.params[e[a.type]],a.selectMeasurement=function(b){b&&(a.selectedMeasurements.push(b),this.searchMeasurementText="")};var f=function(a){return"DIMENSION"===a||"METRIC"===a?c.items.metadata.filter(function(b){return b.type===a}):"SEGMENT"===a?c.items.segments.map(function(a){return a.group=a.type,a.uiName=a.name,a}):void 0};a.measurementSearch=function(c){return c?f(a.type).filter(b.createFilter(c,"uiName")):[]},a.removeMeasurement=function(b){a.selectedMeasurements.splice(b,1)}}]).directive("ngarMeasurementSelector",function(){return{restrict:"E",scope:{type:"@"},controller:"MeasurementSelectorCtrl",template:'<div flex layout-margin>\n  <md-autocomplete\n    md-no-cache\n    md-selected-item-change="selectMeasurement(measurement)"\n    md-selected-item="selectedMeasurement"\n    md-search-text="searchMeasurementText"\n    md-items="measurement in measurementSearch(searchMeasurementText)"\n    md-item-text="measurement.uiName"\n    placeholder="Enter {{type}}">\n    <md-item-template>\n      <span>\n        <span> {{measurement.group}} > </span>\n      </span>\n      <span>\n        <span>\n          <strong>{{measurement.uiName}}</strong>\n        </span>\n      </span>\n    </md-item-template>\n    <md-not-found>\n      "{{searchMeasurement}}" has no match.\n    </md-not-found>\n  </md-autocomplete>\n  <md-chips\n    ng-model="selectedMeasurements"\n    delete-button-label="Remove Measurement"\n    delete-hint="Press delete to remove {{type}}"\n    readonly="true"\n    md-max-chips="7">\n    <md-chip-template>\n      <span>{{$chip.uiName}}</span>\n      <md-icon ng-click="removeMeasurement($index)">close</md-icon>\n    </md-chip-template>\n  </md-chips>\n  <!-- <div ng-message="md-max-chips">You reached the maximum amount of chips</div> -->\n</div>\n'}}),angular.module("angularGapiAnalyticsreportingUI").factory("ngarViewSelectorService",["ngarManagementService","$mdPanel","$mdMedia",function(a,b,c){var d;d=c("gt-sm")?b.newPanelPosition().absolute().left("10%").top("10%"):b.newPanelPosition().absolute().left("10%").top("10%");var e='<md-content flex layout-fill layout="row" md-whiteframe="8">\n  <div layout="column" flex layout-fill>\n    <md-toolbar md-scroll-shrink>\n      <div class="md-toolbar-tools">Accounts</div>\n    </md-toolbar>\n    <div layout="column" flex layout-fill style="overflow:scroll;">\n      <md-list>\n        <md-list-item class="md-2-line" ng-repeat="account in accounts track by account.id" ng-click="selectAccount(account.id)">\n          <div class="md-list-item-text" layout="column">\n            <p>{{account.name}}</p>\n            <p>({{account.id}})</p>\n          </div>\n        </md-list-item>\n      </md-list>\n    </div>\n  </div>\n  <div layout="column" flex layout-fill style="overflow:scroll;">\n    <md-toolbar md-scroll-shrink>\n      <div class="md-toolbar-tools">Properties</div>\n    </md-toolbar>\n    <div layout="column" flex layout-fill style="overflow:scroll;">\n      <md-list>\n        <md-list-item class="md-2-line" ng-repeat="property in selectedAccount.properties track by property.id" ng-click="selectProperty(property.id)">\n          <div class="md-list-item-text" layout="column">\n            <p>{{property.name}}</p>\n            <p>({{property.id}})</p>\n          </div>\n        </md-list-item>\n      </md-list>\n    </div>\n  </div>\n  <div layout="column" flex layout-fill style="overflow:scroll;">\n    <md-toolbar md-scroll-shrink>\n      <div class="md-toolbar-tools">Views</div>\n    </md-toolbar>\n    <div layout="column" flex layout-fill style="overflow:scroll;">\n      <md-list style="overflow:scroll:">\n        <md-list-item class="md-2-line" ng-repeat="view in selectedProperty.views track by view.id" ng-click="selectView(view.id)">\n          <div class="md-list-item-text" layout="column">\n            <p>{{view.name}}</p>\n            <p>({{view.id}})</p>\n          </div>\n        </md-list-item>\n      </md-list>\n    </div>\n  </div>\n</md-content>\n<md-button flex ng-click="closePanel()" class="md-warn md-raised">Close</md-button>\n',f=function(){var c={controller:"ViewSelectorCtrl",controllerAs:"Ctrl",locals:{accounts:a.items.accountsTree},position:d,zIndex:1e3,panelClass:"viewSelector",template:e,clickOutsideToClose:!0,escapeToClose:!0,focusOnOpen:!0,hasBackdrop:!0,fullscreen:!1},f=b.create(c);f.open()["finally"](function(){f=void 0})};return{showSelector:f}}]).controller("ViewSelectorCtrl",["$scope","mdPanelRef","ngarManagementService","ngarReportService","accounts",function(a,b,c,d,e){a.accounts=e,a._mdPanelRef=b,a.closePanel=function(){a._mdPanelRef.close()["finally"](function(){})},a.selectAccount=function(b){a.selectedAccount=a.accounts.find(function(a){return a.id===b}),a.selectedProperty={}},a.selectProperty=function(b){a.selectedProperty=a.selectedAccount.properties.find(function(a){return a.id===b})},a.selectView=function(b){d.updateViewId(b),a.closePanel()}}]).directive("ngarViewSelector",["ngarViewSelectorService",function(a){return{restrict:"A",scope:{},link:function(b,c){c.bind("click",function(){a.showSelector()})}}}]);